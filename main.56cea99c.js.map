{"version":3,"sources":["scripts/main.js"],"names":["digitsCounterAnimate","digitsCounter","startTimesTemp","duration","parseInt","dataset","startValue","innerHTML","window","requestAnimationFrame","step","timestamp","progress","Math","min","floor","windowLoad","options","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","targetElement","digitsCounterItems","target","querySelectorAll","length","digitsCountersInit","digitsCounters","document","threshold","sections","section","observe","addEventListener","location","hash","body","classList","add","remove"],"mappings":";AAAA,aAYA,SAASA,EAAqBC,GACxBC,IAAAA,EAAiB,KACfC,EAAWC,SACfH,EAAcI,QAAQJ,cAClBA,EAAcI,QAAQJ,cACtB,KAEAK,EAAaF,SAASH,EAAcM,WAkB1CC,OAAOC,sBAhBM,SAAPC,EAAQC,GACPT,IACHA,EAAiBS,GAGbC,IAAAA,EAAWC,KAAKC,KAAKH,EAAYT,GAAkBC,EAAU,GAEnEF,EAAcM,UAAYM,KAAKE,MAC7BH,GATkB,EASUN,IAG1BM,EAAW,GACbJ,OAAOC,sBAAsBC,KAOnC,SAASM,IAYDC,IAkBAC,EAAW,IAAIV,OAAOW,qBAdX,SAACC,GAChBA,EAAQC,QAAQ,SAAAC,GACVA,GAAAA,EAAMC,eAAgB,CAClBC,IACAC,EADgBH,EAAMI,OAEzBC,iBAAiB,yBAEhBF,EAAmBG,QAtBpBC,SAAmBJ,GACpBK,IAAAA,EAAiBL,GAClBM,SAASJ,iBAAiB,yBAE3BG,GACFA,EAAeT,QAAQ,SAAApB,GACrBD,EAAqBC,KAiBnB4B,CAAmBJ,OAZX,CACdO,UAAW,KAmBPC,EAAWF,SAASJ,iBAAiB,WAEvCM,EAASL,QACXK,EAASZ,QAAQ,SAAAa,GAAWhB,OAAAA,EAASiB,QAAQD,KAzEjD1B,OAAO4B,iBAAiB,aAAc,WACP,UAAzB5B,OAAO6B,SAASC,KAClBP,SAASQ,KAAKC,UAAUC,IAAI,uBAE5BV,SAASQ,KAAKC,UAAUE,OAAO,yBAInClC,OAAO4B,iBAAiB,OAAQpB","file":"main.56cea99c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  if (window.location.hash === '#menu') {\r\n    document.body.classList.add('page_body-with-menu');\r\n  } else {\r\n    document.body.classList.remove('page_body-with-menu');\r\n  }\r\n});\r\n\r\nwindow.addEventListener('load', windowLoad);\r\n\r\nfunction digitsCounterAnimate(digitsCounter) {\r\n  let startTimesTemp = null;\r\n  const duration = parseInt(\r\n    digitsCounter.dataset.digitsCounter\r\n      ? digitsCounter.dataset.digitsCounter\r\n      : 300\r\n  );\r\n  const startValue = parseInt(digitsCounter.innerHTML);\r\n  const startPosition = 0;\r\n  const step = (timestamp) => {\r\n    if (!startTimesTemp) {\r\n      startTimesTemp = timestamp;\r\n    };\r\n\r\n    const progress = Math.min((timestamp - startTimesTemp) / duration, 1);\r\n\r\n    digitsCounter.innerHTML = Math.floor(\r\n      progress * (startPosition + startValue)\r\n    );\r\n\r\n    if (progress < 1) {\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  };\r\n\r\n  window.requestAnimationFrame(step);\r\n}\r\n\r\nfunction windowLoad() {\r\n  function digitsCountersInit(digitsCounterItems) {\r\n    const digitsCounters = digitsCounterItems\r\n      || document.querySelectorAll('[data-digits-counter]');\r\n\r\n    if (digitsCounters) {\r\n      digitsCounters.forEach(digitsCounter => {\r\n        digitsCounterAnimate(digitsCounter);\r\n      });\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    threshold: 0.2,\r\n  };\r\n\r\n  const callBack = (entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        const targetElement = entry.target;\r\n        const digitsCounterItems = targetElement\r\n          .querySelectorAll('[data-digits-counter]');\r\n\r\n        if (digitsCounterItems.length) {\r\n          digitsCountersInit(digitsCounterItems);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const observer = new window.IntersectionObserver(callBack, options);\r\n\r\n  const sections = document.querySelectorAll('section');\r\n\r\n  if (sections.length) {\r\n    sections.forEach(section => observer.observe(section));\r\n  }\r\n}\r\n"]}